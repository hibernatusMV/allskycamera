import sys
import os
import subprocess
import time
import datetime
from datetime import timedelta
import telepot
from telepot.loop import MessageLoop
from telepot.namedtuple import ReplyKeyboardMarkup, KeyboardButton

# routine to listen to user input
def on_chat_message(msg):
    chat_id = msg['chat']['id']
    command = msg['text']

    print 'Got command: %s' % command

    # define button menu
    shtdnkeyboard = ReplyKeyboardMarkup(keyboard=[
        #/shutdown
        [KeyboardButton(text="Shutdown"), KeyboardButton(text="Cancel")]
    ], resize_keyboard=True, one_time_keyboard=True)

    rbootkeyboard = ReplyKeyboardMarkup(keyboard=[
        #/reboot
        [KeyboardButton(text="Reboot"), KeyboardButton(text="Cancel")]
    ], resize_keyboard=True, one_time_keyboard=True)
    
    allskykeyboard = ReplyKeyboardMarkup(keyboard=[
        #/system
        [KeyboardButton(text="Dome Temp."), KeyboardButton(text="Heat Status"), KeyboardButton(text="Live-View")]
    ], resize_keyboard=True)
    
    # user action input
    if command == '/uptime':
        with open('/proc/uptime', 'r') as f:
            uptime_seconds = float(f.readline().split()[0])
            uptime_string = str(timedelta(seconds = uptime_seconds))
            bot.sendMessage(chat_id, uptime_string[:-7])
    elif command == '/shutdown':
        bot.sendMessage(chat_id, 'Do you really want to shutdown?', reply_markup = shtdnkeyboard)
    elif command == '/reboot':
        bot.sendMessage(chat_id, 'Do you really want to reboot?', reply_markup = rbootkeyboard)
    elif command == '/system':
        bot.sendMessage(chat_id, 'Allsky Camera Status', reply_markup = allskykeyboard)
    
    # button click events
    if command == 'Dome Temp.':
        hdl = subprocess.Popen("/home/pi/bin/getTempDetail.sh", shell=True, stdout=subprocess.PIPE).stdout
        res = hdl.read()
        bot.sendMessage(chat_id, res)
    elif command == 'Heat Status':
        hdl = subprocess.Popen("/home/pi/bin/allskyheating.sh status", shell=True, stdout=subprocess.PIPE).stdout
        res = hdl.read()
        bot.sendMessage(chat_id, res)
    elif command == 'Live-View':
        bot.sendPhoto (chat_id, photo=open("/home/pi/allsky/liveview-image.jpg", "rb"))
    elif command == 'Shutdown':
        bot.sendMessage(chat_id, 'shutting down system. Bye.')
        os.system("sudo shutdown -h now")
    elif command == 'Reboot':
        bot.sendMessage(chat_id, 'rebooting system. Hold on.')
        os.system("sudo reboot")

# define token generated by Telegram itself (by running /newbot in botfather chat)
bot = telepot.Bot('1147414184:AAFEpAz2q9X-FRNKplofaXXyu6c3PxwAU-A')

# loop to listen for user input
MessageLoop(bot, on_chat_message).run_as_thread()
print 'I am listening ...'

while 1:
    time.sleep(10)
